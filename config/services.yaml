# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.invitation:
        class: App\Admin\InvitationAdmin
        arguments: [~, App\Entity\Invitation, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Invitation, label: Invitation}
        public: true

    admin.person:
        class: App\Admin\PersonAdmin
        arguments: [~, App\Entity\Person, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Invitation, label: Person}
        public: true

    admin.parameter:
        class: App\Admin\ParameterAdmin
        arguments: [~, App\Entity\Parameter, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Setup, label: Parameters}
        public: true

    admin.invitationGroup:
        class: App\Admin\InvitationGroupAdmin
        arguments: [~, App\Entity\InvitationGroup, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Setup, label: InvitationGroup}
        public: true

    admin.personGroup:
        class: App\Admin\PersonGroupAdmin
        arguments: [~, App\Entity\PersonGroup, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Setup, label: PersonGroup }
        public: true

    admin.page:
        class: App\Admin\PageAdmin
        arguments: [~, App\Entity\Page, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Content, label: Page }
        calls:
         - [ addChild, ['@admin.page_block', 'page']]
        public: true

    admin.page_block:
        class: App\Admin\PageBlockAdmin
        arguments: [~, App\Entity\PageBlock, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Content, label: PageBlock }
        public: true

    invitation.auhenticator:
        class: App\Security\InvitationProvider
        arguments: [ "@doctrine.orm.entity_manager" ]

    app.menu_builder:
        class: App\Menu\Builder 
        arguments: ["@knp_menu.factory"] 
 
    app.main_menu: 
        class: Knp\Menu\MenuItem 
        factory: ["@app.menu_builder", MyMenu] 
        arguments: ["@request_stack"] 
        tags: 
            - { name: knp_menu.menu, alias: navigator }